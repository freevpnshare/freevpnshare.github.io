<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
       <link rel="canonical" href="https://freevpnshare.github.io/news/article-81018.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/website/img/clashfans/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>springboot 使用 ActiveMQ</title>
        <meta name="description" content="pom文件添加依赖 &lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt" />
    
    <meta name="author" content="免费VPN分享 免费节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freevpnshare.github.io/news/article-81018.htm" />
    <meta property="og:site_name" content="免费VPN分享 免费节点订阅官网" />
    <meta property="og:title" content="springboot 使用 ActiveMQ" />
    <meta property="og:image" content="https://freevpnshare.github.io/uploads/20240307/ae1b9ecb427e348510a9774bf1229dbe.webp" />
        <meta property="og:release_date" content="2025-03-25T08:18:01" />
    <meta property="og:updated_time" content="2025-03-25T08:18:01" />
        <meta property="og:description" content="pom文件添加依赖 &lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="springboot 使用 ActiveMQ">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://cdn.bootcdn.net">

    <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clashfans/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clashfans/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/website/css/clashfans/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashfans/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-15XX2VLK02"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-15XX2VLK02');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">免费VPN分享</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                            </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">springboot 使用 ActiveMQ </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>pom文件添加依赖</p> <pre><code class="prism language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>activemq<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>activemq<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>activemq<span class="token operator">-</span>pool<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">5.17</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span></code></pre> <p>配置 application.yml</p> <pre><code class="prism language-bash">server:   port:<span class="token number">8080</span><span class="token comment">#springBoot项目访问端口</span>   spring:   activemq:     broker-url: tcp://192.168.140.xx:30005<span class="token comment">#你activeMQ的ip和端口号</span>     user: admin<span class="token comment">#activeMq账号</span>     password: admin<span class="token comment">#activeMq密码</span>     pool:       enabled:<span class="token boolean">true</span><span class="token comment">#连接池启动</span>       max-connections:<span class="token number">10</span><span class="token comment">#最大连接数</span></code></pre> <p>SpringBoot 的启动类添加解 @EnableJms</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableJms</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MqconverterApplication</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MqconverterApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>创建 activeMQ 配置类</p> <pre><code class="prism language-java">mport<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>activemq<span class="token punctuation">.</span></span>ActiveMQConnectionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>activemq<span class="token punctuation">.</span>command<span class="token punctuation">.</span></span><span class="token class-name">ActiveMQQueue</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">JmsListenerContainerFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">SimpleJmsListenerContainerFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">javax<span class="token punctuation">.</span>jms<span class="token punctuation">.</span></span><span class="token class-name">ConnectionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">javax<span class="token punctuation">.</span>jms<span class="token punctuation">.</span></span><span class="token class-name">Queue</span><span class="token punctuation">;</span><span class="token comment">/**  * 配置类  */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">ActiveMQConfig</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.activemq.broker-url}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> brokerUrl<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.activemq.user}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> userName<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.activemq.password}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">ConnectionFactory</span><span class="token function">connectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">ActiveMQConnectionFactory</span><span class="token punctuation">(</span>userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> brokerUrl<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 在 Queue 模式中，对消息的监听需要对containerFactory进行配置      */</span><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">"queueListener"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token class-name">JmsListenerContainerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token function">queueJmsListenerContainerFactory</span><span class="token punctuation">(</span><span class="token class-name">ConnectionFactory</span> connectionFactory<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SimpleJmsListenerContainerFactory</span> factory<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">SimpleJmsListenerContainerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setPubSubDomain</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> factory<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 在 topic 模式中，对消息的监听需要对containerFactory进行配置      */</span><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">"topicListener"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token class-name">JmsListenerContainerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token function">topicJmsListenerContainerFactory</span><span class="token punctuation">(</span><span class="token class-name">ConnectionFactory</span> connectionFactory<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SimpleJmsListenerContainerFactory</span> factory<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">SimpleJmsListenerContainerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setPubSubDomain</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> factory<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <blockquote> <p>pubSubDomain：为true 代表 topic 模式，false 代表队列模式，默认是false</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221117/e1ca2120a7fac5b7d22142c62978eb15.jpg" alt="springboot 使用 ActiveMQ"></p> <p>生产者</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">ActiveMQProducerController</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**      * 队列模式      * @param msg 消息      * @return      */</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/queue/{msg}"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">sendQueue</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">ActiveMQQueue</span> queue<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ActiveMQQueue</span><span class="token punctuation">(</span><span class="token string">"testq"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         jmsMessagingTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * topic 模式      * @param msg 消息      * @return      */</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/topic/{msg}"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">sendTopic</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">ActiveMQTopic</span> topic<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ActiveMQTopic</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         jmsMessagingTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>消费者</p> <pre><code class="prism language-java"><span class="token keyword">import</span><span class="token namespace">com<span class="token punctuation">.</span>njc<span class="token punctuation">.</span>mqconverter<span class="token punctuation">.</span>property<span class="token punctuation">.</span></span><span class="token class-name">KafkaTopicProperty</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JmsListener</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">KafkaTemplate</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">ActiveMQConsumer</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token class-name">KafkaTemplate</span> kafkaTemplate<span class="token punctuation">;</span><span class="token comment">/**      * queue模式的消费者      */</span><span class="token annotation punctuation">@JmsListener</span><span class="token punctuation">(</span>destination<span class="token operator">=</span><span class="token string">"testq"</span><span class="token punctuation">,</span> containerFactory<span class="token operator">=</span><span class="token string">"queueListener"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">readActiveQueue</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">String</span> topic<span class="token operator">=</span><span class="token class-name">KafkaTopicProperty</span><span class="token punctuation">.</span><span class="token function">getSap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         kafkaTemplate<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"activeMQ 消费者接收：{}"</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * topic 模式的消费者      */</span><span class="token annotation punctuation">@JmsListener</span><span class="token punctuation">(</span>destination<span class="token operator">=</span><span class="token string">"test"</span><span class="token punctuation">,</span> containerFactory<span class="token operator">=</span><span class="token string">"topicListener"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">readActivTopic1</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"activeMQ topic 消费者1接收：{}"</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * topic 模式的消费者      */</span><span class="token annotation punctuation">@JmsListener</span><span class="token punctuation">(</span>destination<span class="token operator">=</span><span class="token string">"test"</span><span class="token punctuation">,</span> containerFactory<span class="token operator">=</span><span class="token string">"topicListener"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">readActivTopic2</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"activeMQ topic 消费者2接收：{}"</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <blockquote> <p>监听者的队列模式可以不配 containerFactory ，但topic的需要配置</p> </blockquote> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-80285.htm">动物医院应聘（动物医院应聘要求）</a></p>
                                        <p>下一个：<a href="/news/article-81019.htm">[js] 回调函数 回调地狱 Promise async/await</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-72184.htm" title="猫三联一般多少钱一针疫苗（猫三联疫苗多少钱一针?）">猫三联一般多少钱一针疫苗（猫三联疫苗多少钱一针?）</a></li>
                        <li class="py-2"><a href="/news/article-71529.htm" title="在我的城市有一家宠物医院用英语怎么说（在我的城市有一家宠物医院翻译）">在我的城市有一家宠物医院用英语怎么说（在我的城市有一家宠物医院翻译）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-node-share.htm" title="免费VPN分享 | 3月22日19.4M/S|免费SSR/Shadowrocket/V2ray/Clash订阅节点分享">免费VPN分享 | 3月22日19.4M/S|免费SSR/Shadowrocket/V2ray/Clash订阅节点分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-node-share-links.htm" title="免费VPN分享 | 3月13日20.1M/S|免费Clash/Shadowrocket/V2ray/SSR订阅节点分享">免费VPN分享 | 3月13日20.1M/S|免费Clash/Shadowrocket/V2ray/SSR订阅节点分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-16-clash-v2ray-ss-ssr.htm" title="免费VPN分享 | 3月16日22.9M/S|免费SSR/Clash/V2ray/Shadowrocket订阅节点分享">免费VPN分享 | 3月16日22.9M/S|免费SSR/Clash/V2ray/Shadowrocket订阅节点分享</a></li>
                        <li class="py-2"><a href="/news/article-74173.htm" title="动物医院好评语30字左右 动物医院好评语30字左右怎么写">动物医院好评语30字左右 动物医院好评语30字左右怎么写</a></li>
                        <li class="py-2"><a href="/news/article-74848.htm" title="动物医院投资多少钱啊（动物医院投资多少钱啊现在）">动物医院投资多少钱啊（动物医院投资多少钱啊现在）</a></li>
                        <li class="py-2"><a href="/news/article-81680.htm" title="领养狗的好处和坏处（领养狗的好处和坏处有哪些）">领养狗的好处和坏处（领养狗的好处和坏处有哪些）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-20-free-node-subscribe-links.htm" title="免费VPN分享 | 3月20日22.6M/S|免费SSR/V2ray/Shadowrocket/Clash订阅节点分享">免费VPN分享 | 3月20日22.6M/S|免费SSR/V2ray/Shadowrocket/Clash订阅节点分享</a></li>
                        <li class="py-2"><a href="/news/article-76190.htm" title="领养狗狗协议书范本最新（犬只领养协议）">领养狗狗协议书范本最新（犬只领养协议）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">59</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="copyright_text">
                        免费VPN分享 免费节点订阅官网 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/website/js/frontend/clashfans/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/clashfans/popper.min.js"></script>
    <script src="/assets/website/js/frontend/clashfans/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clashfans/jquery-3.0.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashfans/plugin.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>